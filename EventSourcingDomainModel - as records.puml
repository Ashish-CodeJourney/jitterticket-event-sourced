@startuml Event Implementation Hierarchy (with Records)

interface Event {
  +Integer eventSequence()
}

interface CustomerEvent {
  +CustomerId customerId()
}

interface ConcertEvent {
  +ConcertId concertId()
}

class CustomerRegistered <<record>> {
  -CustomerId customerId
  -Integer eventSequence
  -String customerName
  -String email
}

class TicketsPurchased <<record>> {
  -CustomerId customerId
  -Integer eventSequence
  -TicketOrderId ticketOrderId
  -ConcertId concertId
  -int quantity
  -int paidAmount
}

class ConcertScheduled <<record>> {
  -ConcertId concertId
  -Integer eventSequence
  -String artist
  -int ticketPrice
  -LocalDateTime showDateTime
  -LocalTime doorsTime
  -int capacity
  -int maxTicketsPerPurchase
}

class ConcertRescheduled <<record>> {
  -ConcertId concertId
  -Integer eventSequence
  -LocalDateTime newShowDateTime
  -LocalTime newDoorsTime
}

class TicketsSold <<record>> {
  -ConcertId concertId
  -Integer eventSequence
  -int quantity
  -int paidAmount
}

Event <|-- CustomerEvent
Event <|-- ConcertEvent

CustomerEvent <|.. CustomerRegistered
CustomerEvent <|.. TicketsPurchased

ConcertEvent <|.. ConcertScheduled
ConcertEvent <|.. ConcertRescheduled
ConcertEvent <|.. TicketsSold

@enduml